from operator import itemgetter
from collections import Counter


def input_getter():
    with open('../input/day04.txt','r') as f:
        data = [[datetime.datetime.strptime(l.split(']')[0][1:], '%Y-%m-%d %H:%M'), l.split(']')[1].strip()] for l in f.read().split('\n')]
        data.sort( key=itemgetter(0))
        return data


def most_sleeper(data):
    sleep_time = Counter()
    id = 0
    for row in data:
        if '#' in row[1]:
            id = row[1].split(' ')[1][1:]
        if 'falls' in row[1]:
            start = row[0]
        if 'wakes' in row[1]:
            sleep_time[id] += int(divmod((row[0]-start).total_seconds(),60)[0])
    return sleep_time.most_common(1)[0][0]

def min_cal(most_sleeper_id):
   most_slept_min = Counter()
   for row in arr1:
       flag = False
       if '#' in row[1] and most_sleeper_id not in row[1]:
           flag=False
       if most_sleeper_id in row[1]:
           flag=True
       if 'falls' in row[1]:
           start = row[0].time().minute
       if 'wakes' in row[1]:
           end = row[0].time().minute
           for i in range(start,end):
               most_slept_min[i] += 1
   return most_slept_min.most_common(1)[0][0]
   
   


data = input_getter()
most_sleeper_id = most_sleeper(data)
most_slept_min = min_cal(most_sleeper_id)
print(most_slept_min*int(most_sleeper_id))
